{"version":3,"file":"mod.js","sources":["../lib/main.js","../1dd700434cf58c1a65c05aaad5efd2","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar resolve = require( 'path' ).resolve;\nvar readJSON = require( '@stdlib/fs-read-json' ).sync;\nvar replace = require( '@stdlib/string-replace' );\nvar fileList = require( './../data/file_list.json' );\n\n\n// VARIABLES //\n\nvar dataPath = resolve( __dirname, '..', 'data' );\nvar opts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns the text of Moby Dick.\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @throws {Error} unable to read data\n* @returns {ObjectArray} data\n*\n* @example\n* var data = text();\n* // returns [ {...}, {...}, ... ]\n*/\nfunction text() {\n\tvar fpath;\n\tvar data;\n\tvar text;\n\tvar i;\n\n\tdata = new Array( 139 );\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tfpath = join( dataPath, replace( fileList[ i ], 'txt', 'json' ) );\n\t\ttext = readJSON( fpath, opts );\n\t\tif ( text instanceof Error ) {\n\t\t\tthrow text;\n\t\t}\n\t\tdata[ i ] = text;\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nmodule.exports = text;\n","export default '/home/runner/work/datasets-moby-dick/datasets-moby-dick/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The text of Moby Dick by Herman Melville.\n*\n* @module @stdlib/datasets-moby-dick\n*\n* @example\n* var text = require( '@stdlib/datasets-moby-dick' );\n*\n* var data = text();\n* // returns [ {...}, {...}, ... ]\n*/\n\n// MODULES //\n\nvar text = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = text;\n"],"names":["require","join","resolve","sync","lib"],"mappings":";;yQAsBAA,QAAA,QAAAC,KACA,IAAAC,EAAAF,QAAA,QAAAE,QACAF,QAAA,wBAAAG,KACAH,QAAA,0BACAA,QAAA,4BAKAE,EC/Be,8DD+Bf,KAAA,YEQAE"}